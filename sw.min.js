let c = "v1",
  d = [
    "assets/3rdParty/crate3.min.js",
    "assets/3rdParty/highlight.min.js",
    "assets/3rdParty/dark.min.css",
    "assets/3rdParty/light.min.css",
    "assets/3rdParty/md5.min.js",
    "assets/icons/512x512.png",
    "assets/dark.css",
    "assets/light.css",
    "assets/CPquery.js",
    "assets/Library.js",
    "assets/Options.js",
    "index.html",
    "CPQuerySource/index.html",
    "LibrarySource/index.html",
    "SiteOptions/index.html",
    "PreviewLibrary/index.html",
    "/",
    "CPQuerySource/",
    "LibrarySource/",
    "SiteOptions/",
    "PreviewLibrary/",
    "Discord/",
    "Discord/index.html"
  ];
self["addEventListener"]("install", e => e["waitUntil"](caches["open"](c)["then"](f => f["addAll"](d))["then"](() => self["skipWaiting"]())));
self["addEventListener"]("activate", g => g["waitUntil"](caches["keys"]()["then"](c => Promise["all"](c["map"](i => i != c ? caches["delete"](i) : null)))));
self["addEventListener"]("fetch", j => {
  if (j.request.mode != 'navigate') return;
  j["respondWith"](fetch(j["request"])["catch"](() => caches["match"](j["request"])));
});